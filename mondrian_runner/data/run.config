include required(classpath("application"))

call-caching {
  enabled = true
  invalidate-bad-cache-results = false
}

database {
  profile = "slick.jdbc.HsqldbProfile$"
  db {
    driver = "org.hsqldb.jdbcDriver"
    url = """
    jdbc:hsqldb:file:cromwell-executions/cromwell-db/cromwell-db;
    shutdown=false;
    hsqldb.default_table_type=cached;hsqldb.tx=mvcc;
    hsqldb.result_max_memory_rows=10000;
    hsqldb.large_data=true;
    hsqldb.applog=1;
    hsqldb.lob_compressed=true;
    hsqldb.script_format=3
    """
    connectionTimeout = 120000
    numThreads = 1
   }
}


backend {
  providers {
    slurm {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        concurrent-job-limit = 5000
        filesystems {
          local {
            localization: ["soft-link"]
            caching {
                duplication-strategy: ["soft-link"]
                hashing-strategy: "path+modtime"
            }
          }
        }
        docker.hash-lookup.enabled = false
        runtime-attributes = """
                  String docker
                  String singularity
                  Int cpu
                  String walltime
                  Int memory_gb
                """
        submit-docker = """
            /usersoftware/shahs3/users/grewald/miniconda3/bin/mondrian_runner generate_bsub_command --cwd ${cwd} --walltime ${walltime} --memory_gb ${memory_gb} --cpu ${cpu} --job_name ${job_name} --out ${out} --err ${err} --docker_cwd ${docker_cwd} --singularity_img ${singularity} --job_shell ${job_shell} --docker_script ${docker_script}
        """
        submit = """
            sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${walltime} -p componc -c ${cpu} --mem=${memory_gb} --wrap "/bin/bash ${script}"
        """
        kill = "scancel ${job_id}"
        check-alive = "squeue -j ${job_id} | grep -v JOBID"
        job-id-regex = "Submitted batch job (\\d+).*"
        exit-code-timeout-seconds = 120
      }
    }
  }
}
backend.default = slurm